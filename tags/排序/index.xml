<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>排序 on A Hugo website</title>
    <link>https://zhuweixiong22.github.io/tags/%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 排序 on A Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://zhuweixiong22.github.io/tags/%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode148.排序链表</title>
      <link>https://zhuweixiong22.github.io/1/01/01/leetcode148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuweixiong22.github.io/1/01/01/leetcode148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid>
      <description>148. 排序链表 给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。
示例 1：
输入：head = [4,2,1,3]输出：[1,2,3,4] 示例 2：
输入：head = [-1,5,3,4,0]输出：[-1,0,3,4,5] 示例 3：
输入：head = []输出：[] 提示：
 链表中节点的数目在范围 [0, 5 * 10 ^ 4] 内 -105 &amp;lt;= Node.val &amp;lt;= 105  **进阶：**你可以在 O(n log n) 时间复杂度和常数级空间复杂度下，对链表进行排序吗？
题解 时间复杂度要求 O(n log n) 的话，只能是快速排序、归并排序和堆排序，而且要求时间复杂度要求 O(1)
 数组的堆排空间复杂度是可以达到O(1)的
 只能是快排和归并，并且是迭代法(自底向上)，因为递归的话也会占用O(log N)的系统栈空间
这里选用递归的归并排序，迭代版的下次再补坑
链表可以通过修改引用来更改节点顺序，merge过程无需像数组一样开辟额外空间；
大体过程和数组归并差不多
1、找中点分割
 和数组的区别：链表找中点用到了快慢指针，当快指针停下时，慢指针指向中点位置，并且快指针初始指向的是head.next，简化了边界处理。
 2、归并过程
 和数组的区别：不需要开辟新的空间，只需要两个新指针，一个保存结果的head，一个做为归并时的临时指针。当归并过程，一边链表挂载完毕时，另一边不需要像数组那样通过while循环把剩下的依次复制，只需要挂上剩下结点的引用。</description>
    </item>
    
  </channel>
</rss>
